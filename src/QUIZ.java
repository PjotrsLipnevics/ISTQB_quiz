class QUIZ {
        static
        String[][] quiz = {
                {"What is Quality Assurance?", "a) Process that helps to Prevent bugs", "b) Activity that helps to Find bugs", "c) Bug Prevention system", "a"},
                {"How Quality Assurance helps?", "a) Helps to Find bugs", "b) Helps Prevent bugs", "c) Helps to Find bug Location", "b"},
                {"What is Testing?", "a) Activity that helps to Prevent bugs", "b) Activity that helps to Find bugs", "c) Activity that helps to Report bugs", "b"},
                {"What is Static (DryRun) testing?", "a) Testing when software not executed", "b) Testing when software is executed", "c) Testing software requirements", "a"},
                {"What is Dynamic testing?", "a) Testing when software not executed", "b) Testing software requirements", "c) Testing when software is executed", "c"},
                {"What is BlackBox testing?", "a) Analysis of a required values for tests, based on documentation", "b) Acceptance testing, based on specifications and expectations", "c) Functionality testing, based on input and output results", "c"},
                {"What is WhiteBox testing?", "a) Testing of an actual application", "b) Testing of a software design and coding", "c) Testing based on value analysis", "b"},
                {"Bug lifecycle:", "a) New > Assigned (Tester assign to developer) > Open (Developer is working on defect) > Retest (Test again) > Closed (Bug fixed)", "b) New > Open (Tester assign to developer) > Assigned (Developer is working on defect) > Closed(Bug fixed)", "c) New > Assigned (Lead approves and assign) > Open (Developer is working on defect) or Rejected(Duplicate or Deferred(postponed to next release)) > Fixed (Developer sends tester) > Retest (Test again) > Reopen(If still exists) or Closed(Bug fixed)", "c"},
                {"When to stop testing?", "a) Tests achieved acceptable level; Critical bugs fixed; Code and requirements are met; Defect rate below certain level; Risk at acceptable limit", "b) All possible tests completed; All Bugs fixed; Application have no any bugs left", "c) Application don't have any visible bugs and working properly; Basic idea achieved; Code was written in a good manner", "a"},
                {"Software test lifecycle:", "a) Plan > Analyze test > Design test > Prepare Test > Execute test > Support", "b) Plan > Design test > Analyze test > Prepare Test > Execute test > Support", "c) Plan > Design test > Analyze test > Prepare Test > Support > Execute test", "a"},
                {"What should contain Bug report?", "a) Title; Description; Status; Assignment; Steps to reproduce; Expected Results; Actual results; Project and Version details; Environment; Priority; Severity; Attachments", "b) Title; Description; Defect Type; Steps to reproduce; Expected Results; Project and Version details; Platform details; Attachments; Links; Who assigned", "c) Title; Description; Status; Defect Type; Steps to reproduce; Personal comments to developer; Project and Version details; Platform details; Attachments; Links; Who assigned", "a"},
                {"What is Test Scenario?", "a) Scenario list of features to be tested", "b) A set test data, preconditions, certain expected and actual results for specific tests to verify any requirement", "c) High level description of functionality and technical areas to be tested", "c"},
                {"What is Test Case?", "a) A set of actions to test a particular feature or functionality", "b) A collective set of Test Scenarios", "c) A preconditions to be tested", "a"},
                {"What is 'Given' 'When' 'Then'?", "a) Key words that helps to write scenarios in cucumber", "b) Given-precondition, When-behavior that you're specifying, Then-changes you expect", "c) Key words that helps to read and understand scenario written", "b"},
                {"What is Class in OOP?", "a) Class is a blueprint for creating Objects, can have common properties and/or methods that can be used by Object", "b) Class is a set of Object behaviors and methods that object can use", "c) Class is a blueprint used by an Object", "a"},
                {"What is Object in OOP?", "a) Object is a model defined in a Class", "b) Object represents a state of a Class related to it", "c) Object is a certain unit with own properties and methods Created using certain Class", "c"},
                {"What is priority?", "a) Impact on application or system", "b) Impact on a customer requirements", "c) Impact on specification provided", "b"},
                {"What is severity?", "a) Impact on application or system", "b) Impact on specification provided", "c) Impact on a customer requirements", "a"},
                {"Types of a priority?", "a) High, Minor, Medium, Low", "b) Low, Medium, High", "c) Critical, Major, Moderate, Minor, Cosmetic", "c"},
                {"Types of a severity?", "a) Critical, Major, Moderate, Minor, Cosmetic", "b) High, Minor, Medium, Low", "c) Low, Medium, High", "c"},
                {"What are software testing levels?", "a) Unit, Component, Integration, System, Acceptance", "b) Unit, Integration, Acceptance", "c) Unit, Component, System, Acceptance", "a"},
                {"What is Smoke Testing?", "a) Tests ensuring that the most functions work", "b) Tests ensuring that the most important functions work", "c) Tests ensuring that the most important functions achieved", "b"},
                {"What is Acceptance testing?", "a) Test made to ensure system met the system specifications and if it's acceptable for delivery", "b) Test made to ensure system met the business requirements and if it's acceptable for delivery", "c) Test made to ensure system met the clients specifications and if it's acceptable for delivery", "b"},
                {"What is verification?", "a)  Am I building the product right?", "b)  Am I building the right product?", "c) If delivered functionality acceptable for the customer", "a"},
                {"What is validation?", "a)  Am I building the right product?", "b) Am I building right product right?", "c)  Am I building the product right?", "a"},
                {"What is Alpha testing?", "a) Acceptance testing by real users in real environment", "b) Acceptance testing by real users used to collect critical bugs", "c) Acceptance testing to identify bugs before releasing product", "c"},
                {"What is Beta Testing?", "a) Acceptance testing by real users used to collect critical bugs", "b) Acceptance testing to identify bugs before releasing product", "c) Acceptance testing by real users in real environment", "c"}
        };
}
